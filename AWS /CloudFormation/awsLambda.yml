AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "Creates lambda and Api gateway"
Resources:
  s3ImageBucketRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      RoleName: get-Image-Role
      Policies:
      - PolicyName: get-Image-Policies
        PolicyDocument: 
          Version: 2012-10-17
          Statement:
          - Action:
            - s3:GetObject
            - s3:GetObjectAcl
            - s3:ListBucket
            - s3:PutObject
            - s3:PutObjectAcl
            - s3:DeleteObject
            - 'logs:*'
            Resource:
            - '*'
            - "arn:aws:s3:::*"
            Effect: Allow
  uploadImage:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/handlers/userHandler.uploadImage
      Runtime: nodejs12.x
      FunctionName: uploadImageFunction
      Role: !GetAtt
      - s3ImageBucketRole
      - Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /uploadImage
            Method: post
  getImage:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/handlers/userHandler.getImage
      Runtime: nodejs12.x
      FunctionName: getImageFunction
      Role: !GetAtt
      - s3ImageBucketRole
      - Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /getImage
            Method: GET
  listImages:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/handlers/userHandler.listImages
      Runtime: nodejs12.x
      FunctionName: listImagesFunction
      Role: !GetAtt
      - s3ImageBucketRole
      - Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /listImages
            Method: GET
  updateImage:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/handlers/userHandler.updateImage
      Runtime: nodejs12.x
      FunctionName: updateImageFunction
      Role: !GetAtt
      - s3ImageBucketRole
      - Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /updateImage
            Method: PUT
  deleteImage:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/handlers/userHandler.deleteImage
      Runtime: nodejs12.x
      FunctionName: deleteImageFunction
      Role: !GetAtt
      - s3ImageBucketRole
      - Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /deleteImage
            Method: DELETE
  getImageUrl:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/handlers/userHandler.getImageUrl
      Runtime: nodejs12.x
      FunctionName: getImageUrlFunction
      Role: !GetAtt
      - s3ImageBucketRole
      - Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /getImageUrl
            Method: GET
  changeImagePermissions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/handlers/userHandler.changePermissions
      Runtime: nodejs12.x
      FunctionName: changeImagePermissionsFunction
      Role: !GetAtt
      - s3ImageBucketRole
      - Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /changePermissions
            Method: PUT